package Utilt;

import java.util.ArrayList;
import java.util.List;

/*
 * 携带两种数据
 * 1、当前页的商品信息
 * 2、相关参数
 * 
 * 逻辑总结{
 * 1、设置各种变量
 * 2、创建一个构造方法形参(当前页码、总的条数、一页显示的条数)实现得到参数
 * 已知参数：currentPageNum 当前页码
 * 		   PageSize 每页显示的条数
 * 		   totalRecords 总的条数
 * 
 * 需算出的参数：
 * totalPageNum总的页数  /总的条数除以一页要显示的条数，如果能被整除那么结果就等于总的页数，反之总的页数就等于结果加1
 * startIndex 每页的第一条数据角标  /当前页-1 * 每页显示的条数
 * prePageNum 上一页  /如果当前页是第一页,上一页就是当前页,反之,上一页就是当前页-1
 * nextPageNum 下一页 /如果下一页是最后一页,下一页就等于最后一页,反之,下一页就等于当前页+1
 * 
 * 
 * }
 * 
 */
public class PageModel<T> {
	//当前页的相关商品(用集合装)
	List<T> list = new ArrayList();
	//设置各种参数
	private int currentPageNum;//当前页码
	private int pageSize;//每页显示多少条
	private int totalRecords;//总的条数
	
	private int totalPageNum;//总的页数
	private int startIndex;//每页第一条数据索引
	private int prePageNum;//上一页
	private int nextPageNum;//下一页
	
	private int startPage;//开始的页码
	private int endPage;//结束的页码
	
	private String Url;

	public PageModel(int currentPageNum,int pageSize,int totalRecords) {
		
		this.currentPageNum=currentPageNum;
		this.pageSize=pageSize;
		this.totalRecords=totalRecords;
		
		totalPageNum = totalRecords%pageSize==0?totalRecords/pageSize:totalRecords/pageSize+1;
		
		startIndex = (currentPageNum-1) * pageSize;
		
		if(currentPageNum==1){
			prePageNum=currentPageNum;
		}else{
			prePageNum=currentPageNum-1;
		}
		
		if(currentPageNum==totalPageNum){
			nextPageNum=currentPageNum;
		}else{
			nextPageNum=currentPageNum+1;
		}
		
		startPage=currentPageNum-4;
		endPage=currentPageNum+4;
		
		if(totalPageNum>9){
			if(startPage==0){
				startPage=1;
				endPage=startPage+8;
			}
			if(endPage>totalPageNum){
				endPage=totalPageNum;
				startPage=endPage-8;
			}
		}else{
			startPage=1;
			endPage=currentPageNum;
		}
	}

	public List<T> getList() {
		return list;
	}

	public void setList(List<T> list) {
		this.list = list;
	}

	public int getCurrentPageNum() {
		return currentPageNum;
	}

	public void setCurrentPageNum(int currentPageNum) {
		this.currentPageNum = currentPageNum;
	}

	public int getPageSize() {
		return pageSize;
	}

	public void setPageSize(int pageSize) {
		this.pageSize = pageSize;
	}

	public int getTotalRecords() {
		return totalRecords;
	}

	public void setTotalRecords(int totalRecords) {
		this.totalRecords = totalRecords;
	}

	public int getTotalPageNum() {
		return totalPageNum;
	}

	public void setTotalPageNum(int totalPageNum) {
		this.totalPageNum = totalPageNum;
	}

	public int getStartIndex() {
		return startIndex;
	}

	public void setStartIndex(int startIndex) {
		this.startIndex = startIndex;
	}

	public int getPrePageNum() {
		return prePageNum;
	}

	public void setPrePageNum(int prePageNum) {
		this.prePageNum = prePageNum;
	}

	public int getNextPageNum() {
		return nextPageNum;
	}

	public void setNextPageNum(int nextPageNum) {
		this.nextPageNum = nextPageNum;
	}

	public int getStartPage() {
		return startPage;
	}

	public void setStartPage(int startPage) {
		this.startPage = startPage;
	}

	public int getEndPage() {
		return endPage;
	}

	public void setEndPage(int endPage) {
		this.endPage = endPage;
	}

	public String getUrl() {
		return Url;
	}

	public void setUrl(String url) {
		Url = url;
	}
	
	
	
}
